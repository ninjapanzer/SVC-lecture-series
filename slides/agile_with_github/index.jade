- var revealLocation = '../bower_components/reveal.js/'
- var titlePage=""
doctype html
html(lang="en")

  include ../shared/slide_mixins

  include ../shared/head

  link(rel='external' type='text/html' src="../shared/head.jade")

  body
    .reveal
      .slides
        +titleSlide({title: "An Agile Life",subtitle: "With Github"})
        +slideGroup({"data-background":'#0062AF', class:'ul-color white'})
          // About me start

          +olFragmentSlide("I Am a...",
            ["Sofware Engineer",
             "Open Source Advocate",
             "Web Developer",
             "Github Nut",
             "Polyglot"])

            +speakerNotes()
              | About Paul

          +littleTitleSlide("Where I developed my Skills")
          +bigTitleSlide("At Home")
            | The world is full of problems that sofware can fix
            +speakerNotes()
              :markdown
                - Alone you learn how to express yourself
                - Alone you also learn all your bad habits
                - My favorite project was something I wrote for my mother

          +bigTitleSlide("At School")
            | Learn to be a better you
            +speakerNotes
              :markdown
                - School has a couple of purposes in our society.
                - One is for obvious and righteous expansion of our minds
                - The other is the flat truth that by completing these courses we will have provied ourselves worthy of employment in our chosen field
                - In reality what you do at school defines what you do immediately after graduation
                - There are wonderful opportunities and the competition will be high so School is the best place to start marketing yourself

          +bigTitleSlide("At Work")
            | Coding for Cash
            +speakerNotes()
              :markdown
                - If you are not learning something at work it is likely time to move on.
                - When you go out there for that first job don't get the job that has all the things you already know
                - Strive for that job that stretches your limits and gives your a reason to make your a better developer
                - I went to work directly after I graduated at a small web development agency.
                - I was only able to take that job because I worked on web projects as as student prior to graduation

          +bigTitleSlide("Read Books")
            quote If you can read a book you can become an expert in something
            div - Paul Scarrone
            +speakerNotes()
              | If you can read a book you can do anything
          // About me end
        
        +slideGroup()
          +bigTitleSlide("Version Control")
            img(src="images/version-control.png" width="150%" height="150%")
            +speakerNotes()
              :markdown
                If you have ever worked on a project by yourself or with other and you will eventually bump into the problem of having made changes
                to a file on more than once computer or you have broken something.

          +bigTitleSlide("Git")
            :markdown
              Distributed, Smart, Open Workflow

              Complex

            +speakerNotes()
              :markdown
                This is "a" solution and there are plenty others. Many of which I have used but the only one that really makes sense is Git.
                Git is an example of spite driven development


          +littleTitleSlide("Spite Driven Development", {class:"unmarked"})
            :markdown
              - Created to host the **Linux kernel project**

            +speakerNotes()
              :markdown
                - Its interesting to consider that one of the highest profile OSS projects used commercial software for its version control
                - bitkeeper
                - this concept of spite driven development is rather common in a world of middleware. When you begin developing a large project
                you may descide to cut some corners and integrate middleware into your software

          +bigTitleSlide("But I am not working on a big project!")
            img(src="images/meme-versioncontrolallthings.jpg", class="fragment visible", data-fragment-index='0')
            +speakerNotes()
              :markdown
                Its true that version control should absolutely be used with a big project by why should you use you

        +slideGroup()
          +littleTitleSlide("Use Git Right Now")
            :markdown
              - No more __important_homework_v2_rev_final_final.docx__
              - Start building your portfolio
              - Time Travel

            +speakerNotes()
              :markdown
                - Or "version now, worry later", or just "version now" becuase worry never seems to come into it

          +littleTitleSlide("Treat your code like you calling card")
            :markdown
              - Employeers want to see you code before the interview
              - Let recruiters seek you out
              - Be famous

            +speakerNotes()
              :markdown
                - We work in an industry without formal certification of skills.
                - Those that do the hiring rely on 'code tests' and code in github to identfy you abilities
                - In my experience if you want to work for a 'cool' company you need to have these well cultivated 
                - A repo show progression and volume of work which can help speak to your experience

          +littleTitleSlide("Go Back in Time")
            div Have you ever deleted something?
            img(src="images/signs-point-to-yes.jpg")

        +slideGroup({'data-background':'#808100', class:'ul-color white'})
          +littleTitleSlide("How does it work?")
            :markdown
              - Repo
              - History
              - Commits
              - Branches

          +littleTitleSlide("The History")
            img(src="images/git-history.png", style="background:white;", width="150%", height="150%")

          +littleTitleSlide("A Commit")
            pre
              code(data-trim="", contenteditable="", class='diff').
                @@ -160,4 +195,11 @@ html(lang="en")
                +bigTitleSlide("Octocat Loves You!")
                 img(src="images/baracktocat.jpg" width="50%" height="50%")
                +        +bigTitleSlide("Thank You!")
                +        +littleTitleSlide("Links")
                +          :markdown
                +            - [GitHub Workflow](http://guides.github.com/overviews/flow/)
                +            - [Git Windows](http://msysgit.github.io/)
                +            - [Scrum](http://www.mountaingoatsoftware.com/agile/scrum)
                +


                     include ../shared/footer
                \ No newline at end of file

          +littleTitleSlide("Branching")
            img(src="images/git-history.png", style="background:white;", width="150%", height="150%")

        

        +slideGroup()
          +bigTitleSlide("Enter Github")
            img(src="images/git-hook.jpg", width="50%", height="50%")

          +bigTitleSlide("Be a Social Coder")
            img(src="images/github.png", width="80%", height="80%")

          +littleTitleSlide("Is github different and git?")
            :markdown
              Idealogoically no but it imparts its own Workflow adding

              - Forks
              - Pull Requests

            +speakerNotes()
              :markdown
                - Fork makes a copy of someone else's Repo for you to muck about it
                - PR give you a and the project owner a safe way to review and accept your code


        +slideGroup()
          +bigTitleSlide("Agile is Social")
            :markdown
              The process of defining requirements and solutions through colaboration between **[Self-Organizing][2]**, **[Cross-Functional][3]** teams.

              \- ([wikipedia][1])
              [1]: http://en.wikipedia.org/wiki/Agile_software_development
              [2]: #/2/1
              [3]: #/2/2
 
            +speakerNotes()
              :markdown
                - Agile is a ideal and is best applied as much makes sense for your needs.

          +littleTitleSlide("Self-Organizing", {class: 'unmarked'})
            :markdown
              - The process by which individuals focus to solve a problem as a team that defines itself. - ([selforg.pdf][2])

              - In practice team should be allowed to will grow and shrink on its own based upon need.

              [2]: http://www.controlchaos.com/storage/scrum-articles/selforg.pdf

          +littleTitleSlide("Cross-Functional", {class:'unmarked'})
            :markdown
              - Teams that contain varied expertise working towards the same goal. - ([wikipedia][4])

              - In the software development world expertises could include:
        
                - UX
                - Design
                - Deployment
                - Front-end
                - Back-end
          
              - These team members may not be present for the duration of the project. 
              They will define their own required time on the team acting in a **[Self-Organizing][1]** manner. 
              Along with good communication about project goals team weekenesses can be addressed quickly.
              
              [1]: #/2
              [4]: http://en.wikipedia.org/wiki/Cross-functional_team

        +slideGroup()
          +bigTitleSlide("Agile Github")
            :markdown
              Github is specifially about working with others who are likely not in the same room as you

              http://guides.github.com/overviews/flow/

          +speakerNotes()
            :markdown
              - One thing that has led to the popularity of github is that you can look at others code
              - Use their libraries
              - And if you find a reason to supply your own work you can
              - there is a solution for this. Its called the PR

        +slideGroup({"data-background":'#0079CF', class:'ul-color white'})
          +bigTitleSlide("OSS")
            :markdown
              ## Office of Secret Service

              ## Open Source Software

              ## Operationally Special Slackers

            +speakerNotes()
              :markdown
                - Some possible interpretations of OSS

          +littleTitleSlide("Getting involved")
            :markdown
              - Build up your portfolio
              - Learn from others
              - Make new friends

            +speakerNotes()
              :markdown
                - You will not always have great projects to work on.
                - Or know enough initially to make something big
                - but you can always submit a PR to a worthy project and make the world of software better

          +bigTitleSlide("It feels nice to give back")
            +speakerNotes()
              :markdown
                - For many of us in the software field we will achieve interesting and well paying jobs
                - If we are really lucky we will work for a company that uses and gives back to the open source community
                - I was never a guy to go to soup kitchens but the world needs all kinds of helpers and this is how I help

          +littleTitleSlide("Some things you can try")
            :markdown
              - Find a local business without a website and build it
              - Ask your teachers
              - Ask your mom

            +speakerNotes()
              :markdown
                - Github can host simple static sites for free

        +slideGroup()
          +bigTitleSlide("Octocat Loves You!")
            img(src="images/baracktocat.jpg" width="50%" height="50%")

        +bigTitleSlide("Thank You!")

        +littleTitleSlide("Links")
          :markdown
            - [GitHub Workflow](http://guides.github.com/overviews/flow/)
            - [Git Windows](http://msysgit.github.io/)
            - [Scrum](http://www.mountaingoatsoftware.com/agile/scrum)

    include ../shared/footer